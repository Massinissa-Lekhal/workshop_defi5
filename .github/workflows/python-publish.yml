
name: CI/CD Python + Docker

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - run: |
          python -m pip install -U pip
          pip install flake8
          flake8 src tests

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest -q --cov=src --cov-report=xml:coverage.xml

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t app:${{ github.sha }} .

  smoke_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Build image (cache local)
        run: docker build -t app:${{ github.sha }} .
      - name: Run container (smoke test)
        run: |
          docker run -d -p 8000:8000 --name app app:${{ github.sha }}
          sleep 4
          curl -f http://127.0.0.1:8000/health
      - name: Show logs if failed
        if: failure()
        run: docker logs app || true


  push_image:
    runs-on: ubuntu-latest
    needs: [smoke_test]   # ou [sonar]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/pyapp
          docker build -t $IMAGE:${{ github.sha }} -t $IMAGE:latest .
          docker push $IMAGE:${{ github.sha }}
          docker push $IMAGE:latest
